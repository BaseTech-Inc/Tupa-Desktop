@page "/CadAviso"
@inject NavigationManager NavigationManager

@using System.Text.Json
@using Tupa.Data
@using System.Net.Http

<meta charset="UTF-8">
<title> Tupã </title>
<link rel="stylesheet" href="/css/MainLayout.css">
<link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>


<div class="@Auxilio.classSideBar">
    <div class="logo-details">
        <img src="css/Images/umbrella.png" class="@Auxilio.classLogo" />
        <div class="logo_name">Tupã</div>
        <i class="@Auxilio.classBotao" runat="server" id="btn" @onclick="Auxilio.reduzirMenu"></i>
    </div>
    <ul class="nav-list">
        <li>
            <a href="#" @onclick="goCadUsu">
                <i class='bx bx-user-plus'></i>
                <span class="links_name">Cadastrar usuários</span>
            </a>
            <span class="tooltip">Cadastrar usuários</span>
        </li>
        <li>
            <a href="#" @onclick="goConUsu">
                <i class='bx bx-user'></i>
                <span class="links_name">Consultar usuários</span>
            </a>
            <span class="tooltip">Consultar usuários</span>
        </li>
        <li>
            <a href="#" @onclick="goCadAviso">
                <i class='bx bx-error'></i>
                <span class="links_name">Cadastrar alertas</span>
            </a>
            <span class="tooltip">Adicionar alertas</span>
        </li>
        <li>
            <a href="#" @onclick="goConAviso">
                <i class='bx bx-bell'></i>
                <span class="links_name">Consultar alertas</span>
            </a>
            <span class="tooltip">Consultar alertas</span>
        </li>
        <a class="out" href="" @onclick="sair">
        <li class="profile">

            <i class='bx bx-log-out' id="log_out"> </i>

        </li>
        </a>
    </ul>
</div>
<section class="home-section">
    <div class="Title">
        <h3>Cadastrar Alertas</h3>
    </div>
    <div class="principal" style="height:71vh;">
        <br />
        <label class="lbl" style="margin-left: 17%">Latitude:</label>
        <input class="input" style="width: 37%; margin-right: 20%" @bind="latitude" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Longitude:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="longitude" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Distrito:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="distrito" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Cidade:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="cidade" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Estado:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="estado" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">País:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="pais" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Tempo de início:</label>
        <input class="input" style="width: 37%; margin-right: 20% " placeholder="2021-11-22T17:00:00Z" @bind="tempoInicio" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Tempo de final:</label>
        <input class="input" style="width: 37%; margin-right: 20% " placeholder="2021-11-23T17:00:00Z" @bind="tempoFinal" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Descrição:</label>
        <input class="input" style="width: 37%; margin-right: 20% " @bind="descricao" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Transitividade:</label>
        <select class="select" name="Transitividade" id="transitividade" @bind="transitividade">
            <option value="true">Sim</option>
            <option value="false">Não</option>
        </select>
        <br />
        <br />
        <label class="lbl" style="margin-left: 17% ">Atividade:</label>
        <select class="select" name="Atividade" id="atividade" @bind="atividade">
            <option value="true">Sim</option>
            <option value="false">Não</option>
        </select>
        <button class="botao" @onclick="cadAviso"> Adicionar </button>
        <br />
        <div class="aviso" style="margin-top: 12vh;">
            <label class="aviso"> @avisoCad</label>
        </div>
    </div>
</section>

@code {
    private void goCadUsu()
    {
        NavigationManager.NavigateTo("/CadUsu", true);

    }

    private void goConUsu()
    {
        NavigationManager.NavigateTo("/ConUsu", true);
    }

    private void goCadAviso()
    {
        NavigationManager.NavigateTo("/CadAviso", true);
    }

    private void goConAviso()
    {
        NavigationManager.NavigateTo("/ConAviso", true);
    }

    private async Task sair()
    {
        var response = await client.PostAsync($"/api/Account/logout", null);
        NavigationManager.NavigateTo("/index", true);

    }

}


@code
{
    private string avisoCad { get; set; } = "";

    private static string latitude { get; set; }
    private static string longitude { get; set; }
    private static string distrito { get; set; }
    private static string cidade { get; set; }
    private static string estado { get; set; }
    private static string pais { get; set; }
    private static string tempoInicio { get; set; }
    private static string tempoFinal { get; set; }
    private static string descricao { get; set; }
    private static string transitividade { get; set; } = "true";
    private static string atividade { get; set; } = "true";


    private static readonly HttpClient client = new HttpClient();
    private static string baseAddress = "https://tupaserver.azurewebsites.net/";

    protected override async Task OnInitializedAsync()
    {
        if (client.BaseAddress == null)
        {
            client.BaseAddress = new Uri(baseAddress);

        }

    }

    private async Task cadAviso()
    {
        avisoCad = "";
        try
        {
            client.DefaultRequestHeaders.Clear();
            client.DefaultRequestHeaders.Accept.Clear();
            client.DefaultRequestHeaders.Add("Authorization", String.Format("Bearer {0}", Message.token));
            var response = await client.PostAsync($"/api/v1/Alertas?Latitude={latitude}&Longitude={longitude}&Distrito={distrito}&Cidade={cidade}&Estado={estado}&Pais={pais}&TempoInicio={tempoInicio}&TempoFinal={tempoFinal}&Descricao={descricao}&Transitividade={transitividade}&Atividade={atividade}", null);
            var responseString = await response.Content.ReadAsStringAsync();
            var responseJson = JsonSerializer.Deserialize<Response<string>>(responseString);




            if (responseJson.succeeded)
            {
                avisoCad = "Alerta cadastrado com sucesso.";
            }
            else
            {
                avisoCad = responseJson.ToString();
            }

        }
        catch
        {
            avisoCad = "Falha no cadastro.";
        }



    }


}




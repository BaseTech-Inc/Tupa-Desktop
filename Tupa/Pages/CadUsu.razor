@page "/CadUsu"
@inject NavigationManager NavigationManager

@using System.Text.Json
@using Tupa.Data


<meta charset="UTF-8">
<title> Tupã </title>
<link rel="stylesheet" href="/css/MainLayout.css">
<link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>


<div class="@Auxilio.classSideBar">
    <div class="logo-details">
        <img src="/css/Images/umbrella.png" class="@Auxilio.classLogo"/>
        <div class="logo_name">Tupã</div>
        <i class="@Auxilio.classBotao" runat="server" id="btn" @onclick="Auxilio.reduzirMenu"></i>
    </div>
    <ul class="nav-list">
        <li>
            <a href="#" @onclick="goCadUsu">
                <i class='bx bx-user-plus'></i>
                <span class="links_name">Cadastrar usuários</span>
            </a>
            <span class="tooltip">Cadastrar usuários</span>
        </li>
        <li>
            <a href="#" @onclick="goConUsu">
                <i class='bx bx-user'></i>
                <span class="links_name">Consultar usuários</span>
            </a>
            <span class="tooltip">Consultar usuários</span>
        </li>
        <li>
            <a href="#" @onclick="goCadAviso">
                <i class='bx bx-error'></i>
                <span class="links_name">Cadastrar alertas</span>
            </a>
            <span class="tooltip">Adicionar alertas</span>
        </li>
        <li>
            <a href="#" @onclick="goConAviso">
                <i class='bx bx-bell'></i>
                <span class="links_name">Consultar alertas</span>
            </a>
            <span class="tooltip">Consultar alertas</span>
        </li>
        <a class="out" href="" @onclick="sair">
        <li class="profile">

            <i class='bx bx-log-out' id="log_out"> </i>

        </li>
        </a>
    </ul>
</div>
<section class="home-section">
    <div class="Title">
        <h3>Cadastrar Usuários</h3>
    </div>
    <div class="principal" style="height: 33vh; ">
        <br />
        <label class="lbl" style="margin-left:21%">Nome:</label>
        <input class="input" style="width:40%; margin-right:26%"  @bind="username" />
        <br />
        <br />
        <label class="lbl" style="margin-left: 21%">Email:</label>
        <input class="input" style="width:40%; margin-right:26%"  @bind="email"/>
        <br />
        <br />
        <label class="lbl" style="margin-left: 21%">Senha:</label>
        <input class="input" style="width: 40%; margin-right: 26%"  @bind="password" />
        <br />
        <br />
        <button class="botao" style="margin-top:1vw;" @onclick="cadUsu"> Cadastrar </button>
        <br />
        <div class="aviso" style="margin-top: 7vh;">
            <label class="aviso"> @avisoCad</label>
        </div>
    </div>
</section>

@code {

    private void goCadUsu()
    {
        NavigationManager.NavigateTo("/CadUsu", true);

    }

    private void goConUsu()
    {
        NavigationManager.NavigateTo("/ConUsu", true);
    }

    private void goCadAviso()
    {
        NavigationManager.NavigateTo("/CadAviso", true);
    }

    private void goConAviso()
    {
        NavigationManager.NavigateTo("/ConAviso", true);
    }
    private async Task sair()
    {
        var response = await client.PostAsync($"/api/Account/logout", null);
        NavigationManager.NavigateTo("/index", true);

    }

}


@code
{
    private string avisoCad { get; set; } = "";
    private static string username { get; set; }
    private static string email { get; set; }
    private static string password { get; set; }


    private static readonly HttpClient client = new HttpClient();
    private static string baseAddress = "https://tupaserver.azurewebsites.net/";

    protected override async Task OnInitializedAsync()
    {
        if (client.BaseAddress == null)
        {
            client.BaseAddress = new Uri(baseAddress);

        }

    }


    private async Task cadUsu()
    {
        avisoCad = "";

        try
        {
            var response = await client.PostAsync($"/api/Account/register?username={username}&email={email}&password={password}", null);
            var responseString = await response.Content.ReadAsStringAsync();

            var responseJson = JsonSerializer.Deserialize<Response<string>>(responseString);


            if (responseJson.succeeded)
            {
                avisoCad = "Usuário cadastrado com sucesso.";
            }
            else
            {
                avisoCad = "Falha no cadastro.";
            }

        }
        catch {
            avisoCad = "Falha no cadastro.";
        }




    }



}